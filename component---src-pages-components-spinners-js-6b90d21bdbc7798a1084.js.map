{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Spinner.js","webpack:///./src/pages/components/spinners.js"],"names":["Spinner","forwardRef","_ref","ref","bsPrefix","variant","animation","size","children","_ref$as","as","Component","className","props","bsSpinnerPrefix","createElement","displayName","withLayout","LinkedHeading","h","id","role"],"mappings":"qLAKIA,EAAU,IAAMC,YAAW,SAAUC,EAAMC,GAC7C,IAAIC,EAAWF,EAAKE,SAChBC,EAAUH,EAAKG,QACfC,EAAYJ,EAAKI,UACjBC,EAAOL,EAAKK,KACZC,EAAWN,EAAKM,SAChBC,EAAUP,EAAKQ,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAYV,EAAKU,UACjBC,EAAQ,YAA8BX,EAAM,CAAC,WAAY,UAAW,YAAa,OAAQ,WAAY,KAAM,cAG3GY,GADJV,EAAW,YAAmBA,EAAU,YACP,IAAME,EACvC,OAAO,IAAMS,cAAcJ,EAAW,YAAS,CAC7CR,IAAKA,GACJU,EAAO,CACRD,UAAW,IAAWA,EAAWE,EAAiBP,GAAQO,EAAkB,IAAMP,EAAMF,GAAW,QAAUA,KAC3GG,MAENR,EAAQgB,YAAc,UACP,Q,wBCnBAC,uBAAW,WACxB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAeC,EAAE,IAAIC,GAAG,UAAxB,YAEA,kBAACF,EAAA,EAAD,CAAeC,EAAE,IAAIC,GAAG,QAAxB,aAEA,kBAAC,EAAD,CAASd,UAAU,SAASe,KAAK,SAAShB,QAAQ,WAChD,0BAAMO,UAAU,WAAhB,eAIF,kBAAC,EAAD,CAASN,UAAU,SAASe,KAAK,SAAShB,QAAQ,UAAUE,KAAK,MAC/D,0BAAMK,UAAU,WAAhB","file":"component---src-pages-components-spinners-js-6b90d21bdbc7798a1084.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { useState } from 'react';\nimport { Spinner, SpinnerProps } from 'react-bootstrap';\n\nimport LinkedHeading from '../../components/LinkedHeading';\nimport withLayout from \"../../with-layout\"\n\nexport default withLayout(function Spinners() {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"modals\">Spinners</LinkedHeading> \n      \n      <LinkedHeading h=\"2\" id=\"demo\">Live demo</LinkedHeading>\n\n      <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n\n\n      <Spinner animation=\"border\" role=\"status\" variant=\"primary\" size=\"sm\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n      \n    </>\n  )\n});"],"sourceRoot":""}