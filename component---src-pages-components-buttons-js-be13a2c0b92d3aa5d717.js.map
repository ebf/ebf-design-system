{"version":3,"sources":["webpack:///./src/pages/components/buttons.js","webpack:///./node_modules/react-bootstrap/esm/Button.js"],"names":["BUTTON_TYPES","type","label","BUTTON_SIZES","size","BUTTON_BLOCK","block","BUTTON_DISABLED","state","withLayout","h","id","className","map","variant","theme","github","text","language","showLineNumbers","wrapLines","codeBlock","sm","disabled","Button","forwardRef","_ref","ref","bsPrefix","active","as","props","prefix","classes","href","createElement","Component","displayName","defaultProps"],"mappings":"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","file":"component---src-pages-components-buttons-js-be13a2c0b92d3aa5d717.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Row, Col } from 'react-bootstrap';\nimport { CopyBlock, github } from 'react-code-blocks';\n\nimport LinkedHeading from '../../components/LinkedHeading';\nimport withLayout from \"../../with-layout\"\n\nconst BUTTON_TYPES = [{\n  type: 'primary',\n  label: 'Primary',\n}, {\n  type: 'secondary',\n  label: 'Secondary',\n}, {\n  type: 'success',\n  label: 'Success',\n}, {\n  type: 'danger',\n  label: 'Danger',\n}, {\n  type: 'info',\n  label: 'Info',\n}, {\n  type: 'warning',\n  label: 'Warning',\n}, {\n  type: 'dark',\n  label: 'Dark',\n}, {\n  type: 'link',\n  label: 'Link',\n}];\n\nconst BUTTON_SIZES = [{\n  type: 'primary',\n  size: 'sm',\n  label: 'Small',\n}, {\n  type: 'primary',\n  size: '',\n  label: 'Default',\n}, {\n  type: 'primary',\n  size: 'lg',\n  label: 'Large',\n}];\n\n\nconst BUTTON_BLOCK = [{\n  type: 'primary',\n  block: 'block',\n  label: 'Block',\n}];\n\nconst BUTTON_DISABLED = [{\n  type: 'primary',\n  state: 'disabled',\n  label: 'Disabled',\n}];\n\nexport default withLayout(function Buttons() {\n  return (\n    <>\n      <LinkedHeading h=\"1\" id=\"buttons\">Buttons</LinkedHeading>  \n      <p className=\"lead\">Custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\n\n      <LinkedHeading h=\"2\" id=\"button-types\">Button types</LinkedHeading>\n\n      {BUTTON_TYPES.map(({ type, label }) => (\n        <Button className=\"mb-4\" variant={type}>{label}</Button>\n      ))}\n\n      {BUTTON_TYPES.map(({ type, label }) => {\n        const variant = `${type}`;\n\n        return (\n          <div className=\"mb-3 copyblock-container\">\n            <LinkedHeading h=\"3\" id={label + \"-button\"}>{label} Button</LinkedHeading>\n            <Button className=\"mb-4\" variant={variant}>{label}</Button>\n            <CopyBlock\n              theme={github}\n              text={`<button type=\"button\" class=\"btn btn-outline-${type}\">\\n\\t${label}\\n</button>`}\n              language=\"jsx\"\n              showLineNumbers\n              wrapLines\n              codeBlock\n              className=\"copyblock\"\n            />\n          </div>\n        )\n      })}\n\n      <br/>\n      <br/>\n\n\n      <LinkedHeading h=\"2\" id=\"outline-buttons\">Outline buttons</LinkedHeading>\n      <p>For a lighter touch, Buttons also come in outline-* variants with no background color.</p>\n\n\n      {BUTTON_TYPES.map(({ type, label }) => (\n        <Button className=\"mb-4\" variant={'outline-' + type}>{label}</Button>\n      ))}\n\n      {BUTTON_TYPES.map(({ type, label }) => {\n        const variant = `outline-${type}`;\n\n        return (\n          <div className=\"mb-3 copyblock-container\">\n            <LinkedHeading h=\"3\" id={label + \"-outline-button\"}>{label} Outline Button</LinkedHeading>\n            <Button className=\"mb-4\" variant={variant}>{label}</Button>            \n            <CopyBlock\n              theme={github}\n              text={`<button type=\"button\" class=\"btn btn-outline-${type}\">\\n\\t${label}\\n</button>`}\n              language=\"jsx\"\n              showLineNumbers\n              wrapLines\n              codeBlock\n            />\n          </div>\n        )\n      })}\n\n      <br/>\n      <br/>\n\n\n      <LinkedHeading h=\"2\" id=\"button-sizes\">Sizes</LinkedHeading>\n\n      <p>Fancy larger or smaller buttons? Add classes <code>\"btn-sm\"</code>, <code>\"btn-lg\"</code> for additional sizes.</p>\n      \n      {BUTTON_SIZES.map(({ type, size, label }) => (\n        <div className=\"mb-2\">\n          <Button className=\"mb-4\" size={size} variant={type}>{label} Button</Button>\n          <Button className=\"mb-4\" size={size} variant=\"secondary\">{label} Button</Button>\n        </div>\n      ))}\n\n      {BUTTON_SIZES.map(({ type, size, label }) => {\n        const variant = `${type}`;\n\n        return (\n          <div className=\"mb-3 copyblock-container\">\n            <LinkedHeading h=\"3\" id={size + \"Button\"}>{label} Outline Button</LinkedHeading>\n            <Button className=\"mb-4\" size={size} variant={type}>{label}</Button>            \n            <CopyBlock\n              theme={github}\n              text={`<button type=\"button\" class=\"btn btn-${type} btn-${size}\">\\n\\t${label}\\n</button>`}\n              language=\"jsx\"\n              showLineNumbers\n              wrapLines\n              codeBlock\n            />\n          </div>\n        )\n      })}\n\n      <br/>\n      <br/>\n\n     \n\n\n      <LinkedHeading h=\"2\" id=\"block-button\">Block Level Button</LinkedHeading>\n\n      <p>Create block level buttons—those that span the full width of a parent—by adding <code>block</code></p>\n\n      {BUTTON_BLOCK.map(({ type, block, label }) => (\n        <div className=\"mb-2\">\n          <Button className=\"mb-4\" block={block} variant={type}>{label} Level Button</Button>\n          <Button className=\"mb-4\" block={block} variant=\"secondary\">{label} Level Button</Button>\n        </div>\n      ))}  \n\n      {BUTTON_BLOCK.map(({ type, block, label }) => {\n        const variant = `${type}`;\n\n        return (\n          <div className=\"mb-3 copyblock-container\">\n            <LinkedHeading h=\"3\" id={block + \"-button-markup\"}>{label} Level Button Markup</LinkedHeading>\n            <Button className=\"mb-4\" block={block} variant={type}>{label}</Button>            \n            <CopyBlock\n              theme={github}\n              text={`<button type=\"button\" class=\"btn btn-${type} btn-${block}\">\\n\\t${label}\\n</button>`}\n              language=\"jsx\"\n              showLineNumbers\n              wrapLines\n              codeBlock\n            />\n          </div>\n        )\n      })}    \n\n      <br/>\n      <br/>\n\n      \n      <LinkedHeading h=\"2\" id=\"button-states\">Button states</LinkedHeading>\n\n      <Row>\n        <Col sm={6}>\n          <LinkedHeading h=\"3\" id=\"active-button-state\">Active State</LinkedHeading>\n          <Button className=\"mb-4\" variant=\"primary\">\n            Primary button\n          </Button>\n          <Button className=\"mb-4\" variant=\"secondary\">\n            Secondary button\n          </Button>\n        </Col>\n\n        <Col sm={6}>\n          <LinkedHeading h=\"3\" id=\"disabled-button-state\">Disabled State</LinkedHeading>\n          <Button className=\"mb-4\" variant=\"primary\" disabled>\n            Primary button\n          </Button>\n          <Button className=\"mb-4\" variant=\"secondary\" disabled>\n            Secondary button\n          </Button>\n        </Col>\n      </Row>\n\n      <LinkedHeading h=\"3\" id=\"disabled-button-markup\">Disabled Button Markup</LinkedHeading>\n\n      \n      \n      {BUTTON_DISABLED.map(({ type, state, label }) => {\n        const variant = `${type}`;\n\n        return (\n          <div className=\"mb-3 copyblock-container\">        \n            <Button className=\"mb-4\" variant=\"primary\" disabled>\n              Disabled Primary Button\n            </Button>  \n            <CopyBlock\n              theme={github}\n              text={`<button type=\"button\" class=\"btn btn-${type}\" ${state} >\\n\\t${label} Primary Button\\n</button>`}\n              language=\"jsx\"\n              showLineNumbers\n              wrapLines\n              codeBlock\n            />\n          </div>\n        )\n      })} \n\n    </>\n  )\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}