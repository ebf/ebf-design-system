{"version":3,"sources":["webpack:///./node_modules/refractor/lang/javascript.js"],"names":["javascript","Prism","languages","extend","clike","pattern","lookbehind","keyword","number","operator","insertBefore","regex","greedy","alias","parameter","inside","constant","interpolation","rest","string","markup","tag","addInlined","js","module","exports","displayName","aliases"],"mappings":"4FAMA,SAASA,EAAWC,GAClBA,EAAMC,UAAUF,WAAaC,EAAMC,UAAUC,OAAO,QAAS,CAC3D,aAAc,CAACF,EAAMC,UAAUE,MAAM,cAAe,CAClDC,QAAS,0FACTC,YAAY,IAEdC,QAAS,CAAC,CACRF,QAAS,kCACTC,YAAY,GACX,CACDD,QAAS,6WACTC,YAAY,IAEdE,OAAQ,gOAER,SAAY,oFACZC,SAAU,mGAEZR,EAAMC,UAAUF,WAAW,cAAc,GAAGK,QAAU,uEACtDJ,EAAMC,UAAUQ,aAAa,aAAc,UAAW,CACpDC,MAAO,CACLN,QAAS,2HACTC,YAAY,EACZM,QAAQ,GAGV,oBAAqB,CACnBP,QAAS,gKACTQ,MAAO,YAETC,UAAW,CAAC,CACVT,QAAS,wGACTC,YAAY,EACZS,OAAQd,EAAMC,UAAUF,YACvB,CACDK,QAAS,gDACTU,OAAQd,EAAMC,UAAUF,YACvB,CACDK,QAAS,oDACTC,YAAY,EACZS,OAAQd,EAAMC,UAAUF,YACvB,CACDK,QAAS,qcACTC,YAAY,EACZS,OAAQd,EAAMC,UAAUF,aAE1BgB,SAAU,8BAEZf,EAAMC,UAAUQ,aAAa,aAAc,SAAU,CACnD,kBAAmB,CACjBL,QAAS,oEACTO,QAAQ,EACRG,OAAQ,CACN,uBAAwB,CACtBV,QAAS,QACTQ,MAAO,UAETI,cAAe,CACbZ,QAAS,6DACTC,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,UACTQ,MAAO,eAETK,KAAMjB,EAAMC,UAAUF,aAG1BmB,OAAQ,cAKVlB,EAAMC,UAAUkB,QAClBnB,EAAMC,UAAUkB,OAAOC,IAAIC,WAAW,SAAU,cAGlDrB,EAAMC,UAAUqB,GAAKtB,EAAMC,UAAUF,WAjFvCwB,EAAOC,QAAUzB,EACjBA,EAAW0B,YAAc,aACzB1B,EAAW2B,QAAU,CAAC","file":"react-syntax-highlighter_languages_refractor_javascript-7ea708ddb3ee1813c8b4.js","sourcesContent":["'use strict';\n\nmodule.exports = javascript;\njavascript.displayName = 'javascript';\njavascript.aliases = ['js'];\n\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [Prism.languages.clike['class-name'], {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n      lookbehind: true\n    }],\n    keyword: [{\n      pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: true\n    }],\n    number: /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    \"function\": /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n  });\n  Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [{\n      pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  });\n  Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\${|}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript');\n  }\n\n  Prism.languages.js = Prism.languages.javascript;\n}"],"sourceRoot":""}