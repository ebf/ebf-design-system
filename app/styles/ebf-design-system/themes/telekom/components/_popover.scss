.popover {
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text();
  @include font-size($popover-font-size);
  @include border-radius($popover-border-radius);
  @include box-shadow($popover-box-shadow);
  position: absolute;
  top: 0;
  left: 0;
  z-index: $zindex-popover;
  display: block;
  max-width: $popover-max-width;
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  background-color: $popover-bg;
  background-clip: padding-box;
  border: $popover-border-width solid $popover-border-color;

  .arrow {
    position: absolute;
    display: block;
    width: $popover-arrow-width;
    height: $popover-arrow-height;
    margin: 0 $popover-border-radius;

    &::before,
    &::after {
      position: absolute;
      display: block;
      content: '';
      border-color: transparent;
      border-style: solid;
    }
  }
}

.bs-popover-top,
%bs-popover-top {
  margin-bottom: $popover-arrow-height * 2;

  > .arrow {
    bottom: subtract(-$popover-arrow-height, $popover-border-width);

    &::before {
      bottom: 0;
      border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-top-color: $popover-arrow-outer-color;
    }

    &::after {
      bottom: $popover-border-width;
      border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-top-color: $popover-arrow-color;
    }
  }
}

.bs-popover-right,
%bs-popover-right {
  margin-left: $popover-arrow-height * 2;

  > .arrow {
    left: subtract(-$popover-arrow-height, $popover-border-width);
    width: $popover-arrow-height;
    height: $popover-arrow-width;
    margin: $popover-border-radius 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      left: 0;
      border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-right-color: $popover-arrow-outer-color;
    }

    &::after {
      left: $popover-border-width;
      border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-right-color: $popover-arrow-color;
    }
  }
}

.bs-popover-bottom,
%bs-popover-bottom {
  margin-top: $popover-arrow-height * 2;

  > .arrow {
    top: subtract(-$popover-arrow-height, $popover-border-width);

    &::before {
      top: 0;
      border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);
      border-bottom-color: $popover-arrow-outer-color;
    }

    &::after {
      top: $popover-border-width;
      border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);
      border-bottom-color: $popover-arrow-color;
    }
  }

  // This will remove the popover-header's border just below the arrow
  .popover-header::before {
    position: absolute;
    top: 0;
    left: 50%;
    display: block;
    width: $popover-arrow-width;
    margin-left: -$popover-arrow-width / 2;
    content: '';
    border-bottom: $popover-border-width solid $popover-header-bg;
  }
}

.bs-popover-left,
%bs-popover-left {
  margin-right: $popover-arrow-height * 2;

  > .arrow {
    right: subtract(-$popover-arrow-height, $popover-border-width);
    width: $popover-arrow-height;
    height: $popover-arrow-width;
    margin: $popover-border-radius 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      right: 0;
      border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;
      border-left-color: $popover-arrow-outer-color;
    }

    &::after {
      right: $popover-border-width;
      border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;
      border-left-color: $popover-arrow-color;
    }
  }
}

.bs-popover-auto {
  &[x-placement^='top'] {
    @extend %bs-popover-top;
  }

  &[x-placement^='right'] {
    @extend %bs-popover-right;
  }

  &[x-placement^='bottom'] {
    @extend %bs-popover-bottom;
  }

  &[x-placement^='left'] {
    @extend %bs-popover-left;
  }
}

// Offset the popover to account for the popover arrow
.popover-header {
  @include font-size($fs-2);
  @include border-top-radius($popover-inner-border-radius);
  padding: $popover-header-padding-y $popover-header-padding-x 0 $popover-header-padding-x;
  margin-bottom: 0; // Reset the default from Reboot
  color: $popover-header-color;
  font-weight: $font-weight-medium;
  background-color: $popover-header-bg;
  border-bottom: 0;

  &:empty {
    display: none;
  }
}

.popover-body {
  padding: $popover-body-padding-y $popover-body-padding-x;
  color: $popover-body-color;

  ul {
    &:last-child {
      margin-bottom: 0;
    }
  }
}

.popover-trigger {
  cursor: pointer;
}

// Summary Card

$item-row-height: 93px;

.summary-popover-trigger {
  position: fixed;
  right: $grid-gutter-width;
  bottom: $grid-gutter-width;
  z-index: $zindex-tooltip;
  background-color: $white!important;

  @include media-breakpoint-down(md) {
    bottom: 9rem;
  }
}

.row-bb {
  position: relative;

  &::after {
    content: ' ';
    display: block;
    border-bottom: $border-width solid $gray-300;
    position: absolute;
    bottom: 0;
    left: $grid-gutter-width / 2;
    right: $grid-gutter-width / 2;
  }

  &:last-of-type {
    &::after {
      content: none;
    }
  }
}

.summary-popover {
  border: 0;
  box-shadow: $box-shadow;
  margin-bottom: $grid-gutter-width;
  margin-right: $grid-gutter-width;
  background-color: $white;

  @include media-breakpoint-down(md) {
    max-width: 100vw;
    margin-right: $grid-gutter-width / 2;
    margin-left: $grid-gutter-width / 2;
  }

  .arrow {
    display: none;
  }

  .popover-header {
    color: $gray-1200;
    font-weight: $font-weight-bold;
    margin: $grid-gutter-width $grid-gutter-width $grid-gutter-width / 2;
    padding: 0 0 $grid-gutter-width / 2;
    background-color: $white;
    border-bottom: $border-width solid $gray-300;
  }

  .popover-body {
    color: $gray-1200;
    margin: $grid-gutter-width / 2 $grid-gutter-width $grid-gutter-width;
    padding: 0;

    .customer-details {
      > div {
        padding-bottom: $spacer / 2;
      }
    }

    .items {
      max-height: ($item-row-height * 3) - 1px;
      overflow-y: scroll;

      /* Hide scrollbar for IE, Edge and Firefox */
      overflow: -moz-scrollbars-none !important;
      -ms-overflow-style: none !important;
      scrollbar-width: none !important;

      // Hide filthy scrollbars
      /* Hide scrollbar for Chrome, Safari and Opera */
      &::-webkit-scrollbar {
        display: none !important;
      }
    }

    .item-row {
      padding: $spacer 0;
      height: $item-row-height;

      .col-10 {
        display: flex;
        flex-direction: row;

        .ebf-check-mark {
          color: $success;
          font-weight: $font-weight-bold !important;
        }

        p {
          margin-bottom: 0;
          display: -webkit-box;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
          overflow: hidden;
        }
      }

      label {
        font-weight: $font-weight-bold;
        margin-top: $spacer/4;
        margin-bottom: 0;
        margin-left: $grid-gutter-width;
      }
    }

    .total {
      padding: $grid-gutter-width / 2 0 $grid-gutter-width / 2;
      font-weight: $font-weight-bold;
      font-size: $fs-4;
      text-align: right;
      color: $primary;
      position: relative;

      &::before {
        content: ' ';
        display: block;
        border-top: $border-width solid $gray-300;
        position: absolute;
        top: 0;
        left: $grid-gutter-width / 2;
        right: $grid-gutter-width / 2;
      }
    }
  }
}
