{"version":3,"sources":["webpack:///./node_modules/refractor/lang/r.js"],"names":["r","Prism","languages","comment","string","pattern","greedy","alias","ellipsis","number","keyword","operator","punctuation","module","exports","displayName","aliases"],"mappings":"6FAMA,SAASA,EAAEC,GACTA,EAAMC,UAAUF,EAAI,CAClBG,QAAS,MACTC,OAAQ,CACNC,QAAS,mCACTC,QAAQ,GAEV,mBAAoB,CAGlBD,QAAS,YACTE,MAAO,YAET,QAAW,qBACXC,SAAU,iBACVC,OAAQ,CAAC,kBAAmB,6EAC5BC,QAAS,iHACTC,SAAU,qDACVC,YAAa,gBAtBjBC,EAAOC,QAAUd,EACjBA,EAAEe,YAAc,IAChBf,EAAEgB,QAAU","file":"react-syntax-highlighter_languages_refractor_r-0e678d512da73117a7c3.js","sourcesContent":["'use strict';\n\nmodule.exports = r;\nr.displayName = 'r';\nr.aliases = [];\n\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    \"boolean\": /\\b(?:TRUE|FALSE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [/\\b(?:NaN|Inf)\\b/, /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/],\n    keyword: /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  };\n}"],"sourceRoot":""}