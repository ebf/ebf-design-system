{"version":3,"sources":["webpack:///./node_modules/refractor/lang/monkey.js"],"names":["monkey","Prism","languages","string","comment","pattern","greedy","preprocessor","lookbehind","alias","number","keyword","operator","punctuation","module","exports","displayName","aliases"],"mappings":"6FAMA,SAASA,EAAOC,GACdA,EAAMC,UAAUF,OAAS,CACvBG,OAAQ,cACRC,QAAS,CAAC,CACRC,QAAS,0BACTC,QAAQ,GACP,CACDD,QAAS,MACTC,QAAQ,IAEVC,aAAc,CACZF,QAAS,gBACTG,YAAY,EACZC,MAAO,WAET,SAAY,YACZ,YAAa,CACXJ,QAAS,aACTG,YAAY,EACZC,MAAO,YAETC,OAAQ,CACNL,QAAS,qEACTG,YAAY,GAEdG,QAAS,uXACTC,SAAU,gFACVC,YAAa,gBA/BjBC,EAAOC,QAAUf,EACjBA,EAAOgB,YAAc,SACrBhB,EAAOiB,QAAU","file":"react-syntax-highlighter_languages_refractor_monkey-6fa99a0b373c61192e1b.js","sourcesContent":["'use strict';\n\nmodule.exports = monkey;\nmonkey.displayName = 'monkey';\nmonkey.aliases = [];\n\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    string: /\"[^\"\\r\\n]*\"/,\n    comment: [{\n      pattern: /^#Rem\\s+[\\s\\S]*?^#End/im,\n      greedy: true\n    }, {\n      pattern: /'.+/,\n      greedy: true\n    }],\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    \"function\": /\\w+(?=\\()/,\n    'type-char': {\n      pattern: /(\\w)[?%#$]/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: {\n      pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n    operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  };\n}"],"sourceRoot":""}